---
- hosts: localhost
  gather_facts: no
  tasks:

  - name: test the module without any module_defaults
    collection_namespace.collection_name.echo:
    register: result
  - assert:
      that: "result.args_in == {}"

  - name: test module_defaults with action groups defined in collections

    module_defaults:
      group/collection_namespace.collection_name.test_group:
        option: value

    collections:
      - collection_namespace.collection_name

    block:
      - echo:
        register: result
      - assert:
          that: "result.args_in == {'option': 'value'}"

      - echo:
          option: updated_value
        register: result
      - assert:
          that: "result.args_in == {'option': 'updated_value'}"

  - name: test module_defaults with action groups defined in collections using FQCN

    module_defaults:
      group/collection_namespace.collection_name.test_group:
        option: value

    block:
      - collection_namespace.collection_name.echo:
        register: result
      - assert:
          that: "result.args_in == {'option': 'value'}"

      - collection_namespace.collection_name.echo:
          option: updated_value
        register: result
      - assert:
          that: "result.args_in == {'option': 'updated_value'}"

  - name: test module_defaults with redirected actions groups

    module_defaults:
      group/redirected:
        option: value

    block:
      - collection_namespace.collection_name.echo:
        register: result
      - assert:
          that: "result.args_in == {'option': 'value'}"

      - collection_namespace.collection_name.echo:
          option: updated_value
        register: result
      - assert:
          that: "result.args_in == {'option': 'updated_value'}"

      - echo:
        register: result
        collections: collection_namespace.collection_name
      - assert:
          that: "result.args_in == {'option': 'value'}"

      - echo:
          option: updated_value
        register: result
        collections: collection_namespace.collection_name
      - assert:
          that: "result.args_in == {'option': 'updated_value'}"

  - name: test an action plugin which calls a module with a different name with an action group in module_defaults

    module_defaults:
      group/collection_namespace.collection_name.action_plugins:
        option: value

    block:

      - collection_namespace.collection_name.share_options:
        register: result
      - assert:
          that: "result.args_in == {'option': 'value'}"

      - collection_namespace.collection_name.share_options:
          option: updated_value
        register: result
      - assert:
          that: "result.args_in == {'option': 'updated_value'}"

      - share_options:
        collections: collection_namespace.collection_name
        register: result
      - assert:
          that: "result.args_in == {'option': 'value'}"

      - share_options:
          option: updated_value
        collections: collection_namespace.collection_name
        register: result
      - assert:
          that: "result.args_in == {'option': 'updated_value'}"

  - name: test an action plugin which calls a module with a different name with a different action group in module_defaults

    module_defaults:
      group/collection_namespace.collection_name.test_group:
        option: value

    block:

      - collection_namespace.collection_name.share_options:
        register: result
      - assert:
          that: "result.args_in == {}"

      - collection_namespace.collection_name.share_options:
          option: updated_value
        register: result
      - assert:
          that: "result.args_in == {'option': 'updated_value'}"

      - share_options:
        collections: collection_namespace.collection_name
        register: result
      - assert:
          that: "result.args_in == {}"

      - share_options:
          option: updated_value
        collections: collection_namespace.collection_name
        register: result
      - assert:
          that: "result.args_in == {'option': 'updated_value'}"
