# https://github.com/ansible/ansible/issues/68775
- name: Test setting maximum expiration
  when: ansible_facts.os_family in ['RedHat', 'Debian', 'Suse']
  block:
    - name: create user
      user:
        name: ansibulluser
        state: present

    - name: add maximum expire date for password
      user:
        name: ansibulluser
        password_expire_max: 10
      register: pass_max_1_0

    - name: again add maximum expire date for password
      user:
        name: ansibulluser
        password_expire_max: 10
      register: pass_max_1_1

    - name: validate result for maximum expire date
      assert:
        that:
          - pass_max_1_0 is changed
          - pass_max_1_1 is not changed

    - name: add minimum expire date for password
      user:
        name: ansibulluser
        password_expire_min: 5
      register: pass_min_2_0

    - name: again add minimum expire date for password
      user:
        name: ansibulluser
        password_expire_min: 5
      register: pass_min_2_1

    - name: validate result for minimum expire date
      assert:
        that:
          - pass_min_2_0 is changed
          - pass_min_2_1 is not changed

    - name: Get shadow data for ansibulluser
      getent:
        database: shadow
        key: ansibulluser

    - name: Ensure password expiration was set properly
      assert:
        that:
          - ansible_facts.getent_shadow['ansibulluser'][2] == '5'
          - ansible_facts.getent_shadow['ansibulluser'][3] == '10'

    - name: Set min and max at the same time
      user:
        name: ansibulluser
        # also checks that assigning 0 works
        password_expire_min: 0
        password_expire_max: 0

    - name: Get shadow data for ansibulluser
      getent:
        database: shadow
        key: ansibulluser

    - name: Ensure password expiration was set properly
      assert:
        that:
          - ansible_facts.getent_shadow['ansibulluser'][2] == '0'
          - ansible_facts.getent_shadow['ansibulluser'][3] == '0'

    - block:
        - name: create an unprivileged user for next test
          user:
            name: unpriv
            state: present

        # https://github.com/ansible/ansible/issues/78222
        - name: test modifying password expiration without permission is an error
          user:
            name: ansibulluser
            password_expire_min: 10
            password_expire_max: 20
          become_user: unpriv
          become: yes
          ignore_errors: yes
          register: password_exp_failed

        # https://github.com/ansible/ansible/issues/78017
        - name: test permission error getting shadow info is ignored if password_expire_min and password_expire_max are None
          user:
            name: ansibulluser
          become_user: unpriv
          become: yes
          ignore_errors: yes
          register: password_exp_unchanged

        - assert:
            that:
              - password_exp_unchanged is success
              - not password_exp_unchanged.changed
              - password_exp_failed is failed
              - password_exp_failed.rc == 13
      always:
        - name: remove unprivileged user
          user:
            name: unpriv
            state: absent
            remove: yes
