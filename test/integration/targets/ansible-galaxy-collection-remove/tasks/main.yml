- name: install a specific collection with a specific (compatible) dependency
  command: ansible-galaxy collection install amazon.aws:1.0.0 community.aws:1.0.0 --no-deps --force
  register: result
  failed_when:
    - '"amazon.aws (1.0.0) was installed successfully" not in result.stdout_lines'
    - '"community.aws (1.0.0) was installed successfully" not in result.stdout_lines'

- name: remove any version found
  command: ansible-galaxy collection remove community.aws
  register: result

- assert:
    that:
      - '"amazon.aws (1.0.0) was removed successfully" in result.stdout_lines'
      - '"community.aws (1.0.0) was removed successfully" in result.stdout_lines'

- name: install a specific collection with a specific (compatible) dependency
  command: ansible-galaxy collection install amazon.aws:1.0.0 community.aws:1.0.0 --no-deps
  register: result
  failed_when:
    - '"amazon.aws (1.0.0) was installed successfully" not in result.stdout_lines'
    - '"community.aws (1.0.0) was installed successfully" not in result.stdout_lines'

- name: remove the exact version and any dependencies
  command: ansible-galaxy collection remove community.aws:1.0.0
  register: result

- assert:
    that:
      - '"amazon.aws (1.0.0) was removed successfully" in result.stdout_lines'
      - '"community.aws (1.0.0) was removed successfully" in result.stdout_lines'

- name: install a specific collection with a specific (compatible) dependency
  command: ansible-galaxy collection install amazon.aws:1.0.0 community.aws:1.0.0 --no-deps
  register: result
  failed_when:
    - '"amazon.aws (1.0.0) was installed successfully" not in result.stdout_lines'
    - '"community.aws (1.0.0) was installed successfully" not in result.stdout_lines'

- name: try to remove a version that isn't installed
  command: ansible-galaxy collection remove community.aws:1.2.0
  register: result

- assert:
    that:
      - '"amazon.aws (1.0.0) was removed successfully" not in result.stdout_lines'
      - '"community.aws (1.0.0) was removed successfully" not in result.stdout_lines'

- name: try to remove a version contraint that isn't matched by the installed collection
  command: ansible-galaxy collection remove community.aws:>1.0.0
  register: result

- assert:
    that:
      - '"amazon.aws (1.0.0) was removed successfully" not in result.stdout_lines'
      - '"community.aws (1.0.0) was removed successfully" not in result.stdout_lines'

- name: remove a matching version constraint
  command: ansible-galaxy collection remove community.aws:>=1.0.0
  register: result

- assert:
    that:
      - '"amazon.aws (1.0.0) was removed successfully" in result.stdout_lines'
      - '"community.aws (1.0.0) was removed successfully" in result.stdout_lines'

- name: install a specific collection with a specific (incompatible) dependency
  command: ansible-galaxy collection install amazon.aws:1.0.0 community.aws:1.2.0 --no-deps
  register: result
  failed_when:
    - '"amazon.aws (1.0.0) was installed successfully" not in result.stdout_lines'
    - '"community.aws (1.2.0) was installed successfully" not in result.stdout_lines'

- name: test deleting a collection without a matching dependency
  command: ansible-galaxy collection remove community.aws
  register: result

- assert:
    that:
      - '"community.aws (1.2.0) was removed successfully" in result.stdout_lines'
      - '"amazon.aws (1.0.0) was removed successfully" not in result.stdout_lines'

- name: cleanup last collection
  command: ansible-galaxy collection remove amazon.aws
  register: result

- assert:
    that: '"amazon.aws (1.0.0) was removed successfully" in result.stdout_lines'
